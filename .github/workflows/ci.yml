name: Continuous Integration

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Go Build
        run: go build -v ./...

      - name: Go Test
        run: go test ./... -shuffle on -count 10 -coverprofile cover.out

      - name: Go Vet
        run: go test -v ./... -vet all

      - name: Coverage
        run: go tool cover -func cover.out

  golint:
    name: Golint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: .

  pylint:
    name: Pylint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')
